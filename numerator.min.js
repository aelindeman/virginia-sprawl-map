!function(a){"use strict";if("function"==typeof define&&define.amd)define(["jquery"],a);else if("object"==typeof exports)a(require("jquery"));else{if("undefined"==typeof jQuery)throw"jquery-numerator requires jQuery to be loaded first";a(jQuery)}}(function(a){function b(b,e){this.element=b,this.settings=a.extend({},d,e),this._defaults=d,this._name=c,this.init()}var c="numerator",d={easing:"swing",duration:500,delimiter:void 0,rounding:0,toValue:void 0,fromValue:void 0,queue:!1,onStart:function(){},onStep:function(){},onProgress:function(){},onComplete:function(){}};b.prototype={init:function(){this.parseElement(),this.setValue()},parseElement:function(){var b=a.trim(a(this.element).text());this.settings.fromValue=this.settings.fromValue||this.format(b)},setValue:function(){var b=this;a({value:b.settings.fromValue}).animate({value:b.settings.toValue},{duration:parseInt(b.settings.duration,10),easing:b.settings.easing,start:b.settings.onStart,step:function(c,d){a(b.element).text(b.format(c)),b.settings.onStep(c,d)},progress:b.settings.onProgress,complete:b.settings.onComplete})},format:function(a){var b=this;return a=parseInt(this.settings.rounding)<1?parseInt(a,10):parseFloat(a).toFixed(parseInt(this.settings.rounding)),b.settings.delimiter?this.delimit(a):a},delimit:function(a){var b=this;if(a=a.toString(),b.settings.rounding&&parseInt(b.settings.rounding,10)>0){var c=a.substring(a.length-(b.settings.rounding+1),a.length),d=a.substring(0,a.length-(b.settings.rounding+1));return b.addDelimiter(d)+c}return b.addDelimiter(a)},addDelimiter:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.settings.delimiter)}},a.fn[c]=function(d){return this.each(function(){a.data(this,"plugin_"+c)&&a.data(this,"plugin_"+c,null),a.data(this,"plugin_"+c,new b(this,d))})}});